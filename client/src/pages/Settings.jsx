import React, { useState, useEffect } from 'react'\nimport { useAuth } from '../contexts/AuthContext'\nimport DashboardLayout from '../components/Layout/DashboardLayout'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport {\n  User,\n  Mail,\n  Phone,\n  Camera,\n  Moon,\n  Sun,\n  Bell,\n  Shield,\n  Trash2,\n  Save,\n  Eye,\n  EyeOff,\n  Upload,\n  X,\n  Check,\n  AlertTriangle,\n  Download,\n  FileText,\n  Globe,\n  Lock,\n  ChevronRight\n} from 'lucide-react'\nimport toast from 'react-hot-toast'\n\nconst Settings = () => {\n  const { user, updateProfile } = useAuth()\n  const [loading, setLoading] = useState(false)\n  const [activeTab, setActiveTab] = useState('profile')\n  const [formData, setFormData] = useState({\n    name: user?.name || '',\n    email: user?.email || '',\n    phone: user?.phone || '',\n    bio: user?.bio || ''\n  })\n  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'light')\n  const [notifications, setNotifications] = useState({\n    email: true,\n    push: false,\n    interviews: true,\n    reports: true,\n    marketing: false\n  })\n  const [privacy, setPrivacy] = useState({\n    profilePublic: false,\n    showEmail: false,\n    allowAnalytics: true\n  })\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false)\n\n  useEffect(() => {\n    // Apply theme\n    document.documentElement.classList.toggle('dark', theme === 'dark')\n    localStorage.setItem('theme', theme)\n  }, [theme])\n\n  const handleProfileUpdate = async (e) => {\n    e.preventDefault()\n    try {\n      setLoading(true)\n      await updateProfile(formData)\n      toast.success('Profile updated successfully')\n    } catch (error) {\n      toast.error('Failed to update profile')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleThemeChange = (newTheme) => {\n    setTheme(newTheme)\n    toast.success(`Switched to ${newTheme} mode`)\n  }\n\n  const handleNotificationChange = (key, value) => {\n    setNotifications(prev => ({ ...prev, [key]: value }))\n    toast.success('Notification preferences updated')\n  }\n\n  const handlePrivacyChange = (key, value) => {\n    setPrivacy(prev => ({ ...prev, [key]: value }))\n    toast.success('Privacy settings updated')\n  }\n\n  const handleDeleteAccount = async () => {\n    try {\n      setLoading(true)\n      // API call to delete account\n      toast.success('Account deletion initiated. You will receive a confirmation email.')\n      setShowDeleteConfirm(false)\n    } catch (error) {\n      toast.error('Failed to delete account')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleExportData = async () => {\n    try {\n      setLoading(true)\n      // API call to export user data\n      toast.success('Data export initiated. Download link will be sent to your email.')\n    } catch (error) {\n      toast.error('Failed to export data')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const tabs = [\n    { id: 'profile', name: 'Profile', icon: User },\n    { id: 'appearance', name: 'Appearance', icon: theme === 'dark' ? Moon : Sun },\n    { id: 'notifications', name: 'Notifications', icon: Bell },\n    { id: 'privacy', name: 'Privacy & Security', icon: Shield },\n    { id: 'data', name: 'Data & Export', icon: Download },\n    { id: 'account', name: 'Account', icon: Trash2 }\n  ]\n\n  return (\n    <DashboardLayout>\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Settings</h1>\n          <p className=\"text-lg text-gray-600\">Manage your account preferences and privacy settings</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n          {/* Sidebar Navigation */}\n          <div className=\"lg:col-span-1\">\n            <nav className=\"space-y-2\">\n              {tabs.map((tab) => (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`w-full flex items-center px-4 py-3 text-left rounded-lg transition-colors ${\n                    activeTab === tab.id\n                      ? 'bg-blue-50 text-blue-700 border border-blue-200'\n                      : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                  }`}\n                >\n                  <tab.icon className=\"w-5 h-5 mr-3\" />\n                  {tab.name}\n                </button>\n              ))}\n            </nav>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"lg:col-span-3\">\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n              {/* Profile Tab */}\n              {activeTab === 'profile' && (\n                <div className=\"p-6\">\n                  <div className=\"flex items-center space-x-4 mb-6\">\n                    <div className=\"relative\">\n                      <div className=\"w-20 h-20 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center\">\n                        <span className=\"text-2xl font-bold text-white\">\n                          {user?.name?.charAt(0)?.toUpperCase() || 'U'}\n                        </span>\n                      </div>\n                      <button className=\"absolute -bottom-1 -right-1 p-2 bg-white rounded-full shadow-lg border border-gray-200 hover:bg-gray-50\">\n                        <Camera className=\"w-4 h-4 text-gray-600\" />\n                      </button>\n                    </div>\n                    <div>\n                      <h2 className=\"text-xl font-semibold text-gray-900\">Profile Information</h2>\n                      <p className=\"text-gray-600\">Update your personal information and profile picture</p>\n                    </div>\n                  </div>\n\n                  <form onSubmit={handleProfileUpdate} className=\"space-y-6\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Full Name\n                        </label>\n                        <div className=\"relative\">\n                          <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                          <input\n                            type=\"text\"\n                            value={formData.name}\n                            onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                            className=\"pl-10 w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                            placeholder=\"Enter your full name\"\n                          />\n                        </div>\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Email Address\n                        </label>\n                        <div className=\"relative\">\n                          <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                          <input\n                            type=\"email\"\n                            value={formData.email}\n                            onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}\n                            className=\"pl-10 w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                            placeholder=\"Enter your email\"\n                          />\n                        </div>\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Phone Number\n                        </label>\n                        <div className=\"relative\">\n                          <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                          <input\n                            type=\"tel\"\n                            value={formData.phone}\n                            onChange={(e) => setFormData(prev => ({ ...prev, phone: e.target.value }))}\n                            className=\"pl-10 w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                            placeholder=\"Enter your phone number\"\n                          />\n                        </div>\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Current Plan\n                        </label>\n                        <div className=\"px-4 py-3 bg-gray-50 rounded-lg border border-gray-200\">\n                          <span className={`px-3 py-1 text-sm font-medium rounded-full ${\n                            user?.subscription?.plan === 'free' \n                              ? 'bg-gray-100 text-gray-800' \n                              : 'bg-green-100 text-green-800'\n                          }`}>\n                            {user?.subscription?.plan === 'free' ? 'Free Plan' : 'Pro Plan'}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Bio\n                      </label>\n                      <textarea\n                        value={formData.bio}\n                        onChange={(e) => setFormData(prev => ({ ...prev, bio: e.target.value }))}\n                        rows={4}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        placeholder=\"Tell us about yourself...\"\n                      />\n                    </div>\n\n                    <div className=\"flex justify-end\">\n                      <button\n                        type=\"submit\"\n                        disabled={loading}\n                        className=\"flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\n                      >\n                        {loading ? (\n                          <LoadingSpinner size=\"sm\" className=\"mr-2\" />\n                        ) : (\n                          <Save className=\"w-4 h-4 mr-2\" />\n                        )}\n                        Save Changes\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              )}\n\n              {/* Theme & UI Settings Tab */}\n              {activeTab === 'appearance' && (\n                <div className=\"p-6\">\n                  <h2 className=\"text