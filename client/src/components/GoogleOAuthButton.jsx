import React, { useEffect, useState } from 'react'\nimport { useAuth } from '../contexts/AuthContext'\nimport { Loader } from 'lucide-react'\nimport toast from 'react-hot-toast'\n\nconst GoogleOAuthButton = ({ onSuccess, onError, text = 'Continue with Google' }) => {\n  const { googleLogin } = useAuth()\n  const [loading, setLoading] = useState(false)\n  const [googleLoaded, setGoogleLoaded] = useState(false)\n\n  useEffect(() => {\n    // Load Google Identity Services script\n    const loadGoogleScript = () => {\n      if (window.google) {\n        setGoogleLoaded(true)\n        return\n      }\n\n      const script = document.createElement('script')\n      script.src = 'https://accounts.google.com/gsi/client'\n      script.async = true\n      script.defer = true\n      script.onload = () => {\n        if (window.google) {\n          setGoogleLoaded(true)\n        }\n      }\n      script.onerror = () => {\n        console.error('Failed to load Google Identity Services')\n        toast.error('Failed to load Google sign-in')\n      }\n      document.head.appendChild(script)\n    }\n\n    loadGoogleScript()\n  }, [])\n\n  useEffect(() => {\n    if (googleLoaded && window.google) {\n      // Initialize Google Identity Services\n      window.google.accounts.id.initialize({\n        client_id: import.meta.env.VITE_GOOGLE_CLIENT_ID,\n        callback: handleCredentialResponse,\n        auto_select: false,\n        cancel_on_tap_outside: true\n      })\n    }\n  }, [googleLoaded])\n\n  const handleCredentialResponse = async (response) => {\n    if (!response.credential) {\n      toast.error('Google sign-in failed')\n      return\n    }\n\n    setLoading(true)\n\n    try {\n      const result = await googleLogin(response.credential)\n      \n      if (result.success) {\n        if (onSuccess) {\n          onSuccess(result)\n        }\n      } else {\n        toast.error(result.message || 'Google sign-in failed')\n        if (onError) {\n          onError(result)\n        }\n      }\n    } catch (error) {\n      console.error('Google OAuth error:', error)\n      toast.error('Google sign-in failed')\n      if (onError) {\n        onError(error)\n      }\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleGoogleSignIn = () => {\n    if (!googleLoaded || !window.google) {\n      toast.error('Google sign-in not available')\n      return\n    }\n\n    try {\n      window.google.accounts.id.prompt((notification) => {\n        if (notification.isNotDisplayed() || notification.isSkippedMoment()) {\n          // Fallback to popup if prompt is not displayed\n          window.google.accounts.id.renderButton(\n            document.getElementById('google-signin-button'),\n            {\n              theme: 'outline',\n              size: 'large',\n              width: '100%',\n              text: 'continue_with'\n            }\n          )\n        }\n      })\n    } catch (error) {\n      console.error('Google sign-in error:', error)\n      toast.error('Google sign-in failed')\n    }\n  }\n\n  if (!import.meta.env.VITE_GOOGLE_CLIENT_ID) {\n    return null // Don't render if Google OAuth is not configured\n  }\n\n  return (\n    <div className=\"w-full\">\n      <button\n        type=\"button\"\n        onClick={handleGoogleSignIn}\n        disabled={loading || !googleLoaded}\n        className=\"w-full inline-flex justify-center items-center py-3 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n      >\n        {loading ? (\n          <Loader className=\"w-5 h-5 animate-spin\" />\n        ) : (\n          <>\n            <svg className=\"w-5 h-5 mr-3\" viewBox=\"0 0 24 24\">\n              <path \n                fill=\"#4285F4\" \n                d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n              />\n              <path \n                fill=\"#34A853\" \n                d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n              />\n              <path \n                fill=\"#FBBC05\" \n                d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n              />\n              <path \n                fill=\"#EA4335\" \n                d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n              />\n            </svg>\n            <span>{text}</span>\n          </>\n        )}\n      </button>\n      \n      {/* Hidden div for Google button rendering */}\n      <div id=\"google-signin-button\" className=\"hidden\"></div>\n    </div>\n  )\n}\n\nexport default GoogleOAuthButton"